'use client'

import { Badge } from '@/components/ui/badge'
import { Button } from '@/components/ui/button'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { Progress } from '@/components/ui/progress'
import {
    ArrowLeft,
    ArrowRight,
    BarChart3,
    Brain,
    CheckCircle,
    FileText,
    Upload,
    User
} from 'lucide-react'
import Link from 'next/link'
import { useState } from 'react'

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã (–∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏)
const PsychologicalQuestionnaire = ({ onComplete }: { onComplete: (data: any) => void }) => (
    <Card>
        <CardHeader>
            <CardTitle className="flex items-center">
                <Brain className="w-5 h-5 mr-2" />
                –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ
            </CardTitle>
            <CardDescription>
                –ù–∞—É—á–Ω–æ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ª–∏—á–Ω–æ—Å—Ç–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–µ–∑—é–º–µ
            </CardDescription>
        </CardHeader>
        <CardContent>
            <p className="mb-4">–≠—Ç–æ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –±—É–¥–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ...</p>
            <Button onClick={() => onComplete({ completed: true })}>
                –ó–∞–≤–µ—Ä—à–∏—Ç—å –∞–Ω–∫–µ—Ç—É (–¥–µ–º–æ)
            </Button>
        </CardContent>
    </Card>
)

const ResumeUploader = ({ onComplete }: { onComplete: (data: any) => void }) => (
    <Card>
        <CardHeader>
            <CardTitle className="flex items-center">
                <Upload className="w-5 h-5 mr-2" />
                –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∑—é–º–µ
            </CardTitle>
            <CardDescription>
                –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ä–µ–∑—é–º–µ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
            </CardDescription>
        </CardHeader>
        <CardContent>
            <div className="border-2 border-dashed border-gray-300 rounded-lg p-8 text-center">
                <Upload className="w-12 h-12 mx-auto text-gray-400 mb-4" />
                <p className="text-gray-600 mb-2">–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª—ã —Å—é–¥–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞</p>
                <p className="text-sm text-gray-500">–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è PDF, DOC, DOCX, TXT</p>
                <Button
                    className="mt-4"
                    onClick={() => onComplete({ files: [], extracted: true })}
                >
                    –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É (–¥–µ–º–æ)
                </Button>
            </div>
        </CardContent>
    </Card>
)

const AdditionalProfileData = ({ onComplete }: { onComplete: (data: any) => void }) => (
    <Card>
        <CardHeader>
            <CardTitle className="flex items-center">
                <User className="w-5 h-5 mr-2" />
                –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è
            </CardTitle>
            <CardDescription>
                –î–æ–±–∞–≤—å—Ç–µ –Ω–∞–≤—ã–∫–∏ –∏ –æ–ø—ã—Ç, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –±—ã–ª–∏ –∏–∑–≤–ª–µ—á–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
            </CardDescription>
        </CardHeader>
        <CardContent>
            <p className="mb-4">–≠—Ç–æ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –±—É–¥–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ...</p>
            <Button onClick={() => onComplete({ additionalData: true })}>
                –ó–∞–≤–µ—Ä—à–∏—Ç—å –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö (–¥–µ–º–æ)
            </Button>
        </CardContent>
    </Card>
)

// –û—Å–Ω–æ–≤–Ω—ã–µ —ç—Ç–∞–ø—ã –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const steps = [
    {
        id: 'psychological',
        title: '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑',
        description: '–ü—Ä–æ–π–¥–∏—Ç–µ –Ω–∞—É—á–Ω–æ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—É—é –∞–Ω–∫–µ—Ç—É –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è',
        icon: Brain,
        component: PsychologicalQuestionnaire,
        estimatedTime: '10-15 –º–∏–Ω—É—Ç'
    },
    {
        id: 'upload',
        title: '–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∑—é–º–µ',
        description: '–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ä–µ–∑—é–º–µ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞–Ω–Ω—ã—Ö',
        icon: Upload,
        component: ResumeUploader,
        estimatedTime: '3-5 –º–∏–Ω—É—Ç'
    },
    {
        id: 'additional',
        title: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ',
        description: '–î–æ–±–∞–≤—å—Ç–µ –Ω–∞–≤—ã–∫–∏ –∏ –æ–ø—ã—Ç, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥–ª–∏ –±—ã—Ç—å –ø—Ä–æ–ø—É—â–µ–Ω—ã –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ',
        icon: User,
        component: AdditionalProfileData,
        estimatedTime: '5-10 –º–∏–Ω—É—Ç'
    },
    {
        id: 'review',
        title: '–û–±–∑–æ—Ä –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ',
        description: '–ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–æ–±—Ä–∞–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –ø–æ–ª—É—á–∏—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏',
        icon: CheckCircle,
        estimatedTime: '2-3 –º–∏–Ω—É—Ç—ã'
    }
]

export default function ComprehensiveQuestionnairePage() {
    const [currentStep, setCurrentStep] = useState(0)
    const [completedSteps, setCompletedSteps] = useState<Set<number>>(new Set())
    const [stepData, setStepData] = useState<Record<string, any>>({})

    const currentStepData = steps[currentStep]
    const isLastStep = currentStep === steps.length - 1
    const canProceed = completedSteps.has(currentStep)

    const progress = ((currentStep + 1) / steps.length) * 100

    const handleStepComplete = (data: any) => {
        setStepData(prev => ({
            ...prev,
            [currentStepData.id]: data
        }))
        setCompletedSteps(prev => new Set([...prev, currentStep]))
    }

    const handleNext = () => {
        if (canProceed && !isLastStep) {
            setCurrentStep(prev => prev + 1)
        }
    }

    const handlePrevious = () => {
        if (currentStep > 0) {
            setCurrentStep(prev => prev - 1)
        }
    }

    const handleFinish = () => {
        // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        console.log('Completed questionnaire with data:', stepData)
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª—å
        window.location.href = '/profile'
    }

    const renderStepContent = () => {
        if (isLastStep) {
            return (
                <Card>
                    <CardHeader>
                        <CardTitle className="flex items-center">
                            <CheckCircle className="w-5 h-5 mr-2 text-green-600" />
                            –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!
                        </CardTitle>
                        <CardDescription>
                            –í–∞—à –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω
                        </CardDescription>
                    </CardHeader>
                    <CardContent className="space-y-6">
                        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div className="p-4 border rounded-lg bg-green-50">
                                <h4 className="font-medium text-green-800 mb-2">‚úÖ –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ñ–∏–ª—å</h4>
                                <p className="text-sm text-green-700">–ê–Ω–∞–ª–∏–∑ –ª–∏—á–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω</p>
                            </div>

                            <div className="p-4 border rounded-lg bg-blue-50">
                                <h4 className="font-medium text-blue-800 mb-2">üìÑ –†–µ–∑—é–º–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ</h4>
                                <p className="text-sm text-blue-700">–î–∞–Ω–Ω—ã–µ –∏–∑–≤–ª–µ—á–µ–Ω—ã –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω—ã</p>
                            </div>

                            <div className="p-4 border rounded-lg bg-purple-50">
                                <h4 className="font-medium text-purple-800 mb-2">üéØ –ü—Ä–æ—Ñ–∏–ª—å –¥–æ–ø–æ–ª–Ω–µ–Ω</h4>
                                <p className="text-sm text-purple-700">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã</p>
                            </div>

                            <div className="p-4 border rounded-lg bg-orange-50">
                                <h4 className="font-medium text-orange-800 mb-2">ü§ñ AI –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ</h4>
                                <p className="text-sm text-orange-700">–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏</p>
                            </div>
                        </div>

                        <div className="text-center space-y-4">
                            <h3 className="text-xl font-semibold">–ß—Ç–æ –¥–∞–ª—å—à–µ?</h3>
                            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                                <Link href="/profile">
                                    <Card className="cursor-pointer hover:shadow-md transition-shadow">
                                        <CardContent className="p-4 text-center">
                                            <User className="w-8 h-8 mx-auto mb-2 text-blue-600" />
                                            <p className="font-medium">–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</p>
                                            <p className="text-xs text-gray-500">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–º</p>
                                        </CardContent>
                                    </Card>
                                </Link>

                                <Link href="/resume-generator">
                                    <Card className="cursor-pointer hover:shadow-md transition-shadow">
                                        <CardContent className="p-4 text-center">
                                            <FileText className="w-8 h-8 mx-auto mb-2 text-green-600" />
                                            <p className="font-medium">–°–æ–∑–¥–∞—Ç—å —Ä–µ–∑—é–º–µ</p>
                                            <p className="text-xs text-gray-500">–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤</p>
                                        </CardContent>
                                    </Card>
                                </Link>

                                <Card className="cursor-pointer hover:shadow-md transition-shadow" onClick={handleFinish}>
                                    <CardContent className="p-4 text-center">
                                        <BarChart3 className="w-8 h-8 mx-auto mb-2 text-purple-600" />
                                        <p className="font-medium">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞</p>
                                        <p className="text-xs text-gray-500">–ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π</p>
                                    </CardContent>
                                </Card>
                            </div>
                        </div>
                    </CardContent>
                </Card>
            )
        }

        const StepComponent = currentStepData.component
        return StepComponent ? (
            <StepComponent onComplete={handleStepComplete} />
        ) : null
    }

    return (
        <div className="min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50">
            <div className="max-w-4xl mx-auto px-4 py-8">
                <div className="mb-8">
                    <Link href="/" className="text-blue-600 hover:text-blue-800 inline-flex items-center mb-4">
                        <ArrowLeft className="w-4 h-4 mr-1" />
                        –ù–∞–∑–∞–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é
                    </Link>

                    <h1 className="text-3xl font-bold text-gray-900 mb-2">
                        –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ
                    </h1>
                    <p className="text-gray-600">
                        –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ–∑—é–º–µ —Å AI-–∞–Ω–∞–ª–∏–∑–æ–º
                    </p>
                </div>

                {/* –ü—Ä–æ–≥—Ä–µ—Å—Å */}
                <Card className="mb-8">
                    <CardContent className="p-6">
                        <div className="flex items-center justify-between mb-4">
                            <h2 className="text-lg font-semibold">
                                –®–∞–≥ {currentStep + 1} –∏–∑ {steps.length}: {currentStepData.title}
                            </h2>
                            <Badge variant="secondary">
                                {currentStepData.estimatedTime}
                            </Badge>
                        </div>

                        <Progress value={progress} className="mb-4" />

                        <div className="flex justify-between text-sm text-gray-600">
                            {steps.map((step, index) => (
                                <div
                                    key={step.id}
                                    className={`flex items-center ${index === currentStep ? 'text-blue-600 font-medium' :
                                            completedSteps.has(index) ? 'text-green-600' : 'text-gray-400'
                                        }`}
                                >
                                    <step.icon className="w-4 h-4 mr-1" />
                                    <span className="hidden sm:inline">{step.title}</span>
                                </div>
                            ))}
                        </div>
                    </CardContent>
                </Card>

                {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —à–∞–≥–∞ */}
                <div className="mb-8">
                    {renderStepContent()}
                </div>

                {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
                {!isLastStep && (
                    <div className="flex justify-between">
                        <Button
                            variant="outline"
                            onClick={handlePrevious}
                            disabled={currentStep === 0}
                        >
                            <ArrowLeft className="w-4 h-4 mr-1" />
                            –ù–∞–∑–∞–¥
                        </Button>

                        <Button
                            onClick={handleNext}
                            disabled={!canProceed}
                        >
                            –î–∞–ª–µ–µ
                            <ArrowRight className="w-4 h-4 ml-1" />
                        </Button>
                    </div>
                )}

                {isLastStep && (
                    <div className="text-center">
                        <Button
                            size="lg"
                            onClick={handleFinish}
                            className="bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700"
                        >
                            –ó–∞–≤–µ—Ä—à–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø—Ä–æ—Ñ–∏–ª—è
                        </Button>
                    </div>
                )}
            </div>
        </div>
    )
}
